尝试封装成nginx样式的epoll类，但是很不幸，目前没有成功

golang的epoll还是使用的syscall形式，以fd作为对象进行管理。
但是golang中流行的网络操作是net，它里面的基本对象是Listener和Conn,并没有直接打通这种对象到fd的关联。
golang的releasenote，从1.9版本之后提供了一种接口:Conn->RawConn->Control中能够获取到fd，之后可以使用epoll。
但是还需要手动管理fd和Conn的映射关系。

方法一:
高版本golang打通了对象到conn之间的关系。下面解决epoll中封装形式的问题

nginx
epoll的对象观念中，每个对象包括fd和func，其中func在C中都是以ptr形式传递，并且可以接受任意类型的参数，现在的问题是回调函数和参数问题。

golang中只有interface代表合约，它其实没有任意类型的对象，只有遵循特定接口的对象，使用unsafe.Pointer地址指针来代表对象我现在不是十分确定是否安全，即确保golang不会释放这个指针指向的对象。

另外监视的对象不再是统一的fd(即万物皆文件)，不存在统一的接口来操作对象，
例如socket的两种状态:listener状态的套接字的方法只有Accept,而connect状态的套接字实现了Read/Write接口，对于不同的对象没有办法定义统一的接口。

解决思路:可以通过增加中间层的方式来解决对象到接口的映射问题，好坑

方法二:
统一使用syscall中的方式进行操作，就是C语言的翻版，无法充分利用golang的net.
暂时不考虑这种方式
